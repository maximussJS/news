{"ast":null,"code":"import { getToken } from './auth';\nexport var request = function request(method, path, data) {\n  return new Promise(function (resolve, reject) {\n    var headers = {\n      'Content-Type': 'application/json',\n      'Authorization': \"\".concat(getToken())\n    };\n    var options = data ? {\n      method: method,\n      body: JSON.stringify(data),\n      headers: headers\n    } : {\n      method: method,\n      headers: headers\n    };\n    fetch(\"http://localhost:3000\".concat(path), options).then(function (response) {\n      return response.json().then(function (json) {\n        return resolve(json);\n      });\n    }).catch(function (e) {\n      return reject(e);\n    });\n  });\n};\nexport var requestFile = function requestFile(method, path, data) {\n  return new Promise(function (resolve, reject) {\n    var headers = {\n      'Content-Type': 'application/json',\n      'Authorization': \"\".concat(getToken())\n    };\n    var formdata = new FormData();\n    formdata.append('file', data);\n    var options = {\n      method: method,\n      body: JSON.stringify(data),\n      headers: headers\n    };\n    fetch(\"http://localhost:3000\".concat(path), options).then(function (response) {\n      return response.json().then(function (json) {\n        return resolve(json);\n      });\n    }).catch(function (e) {\n      return reject(e);\n    });\n  });\n};","map":{"version":3,"sources":["/home/maximuss/news/news/client/src/utils/request.js"],"names":["getToken","request","method","path","data","Promise","resolve","reject","headers","options","body","JSON","stringify","fetch","then","response","json","catch","e","requestFile","formdata","FormData","append"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,QAAvB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAASC,IAAT,EAAeC,IAAf;AAAA,SAAyB,IAAIC,OAAJ,CAAa,UAACC,OAAD,EAASC,MAAT,EAAoB;AAC/E,QAAMC,OAAO,GAAG;AACd,sBAAgB,kBADF;AAEd,iCAAoBR,QAAQ,EAA5B;AAFc,KAAhB;AAIA,QAAMS,OAAO,GAAGL,IAAI,GAAG;AACrBF,MAAAA,MAAM,EAAEA,MADa;AAErBQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAFe;AAGrBI,MAAAA,OAAO,EAAEA;AAHY,KAAH,GAIhB;AACFN,MAAAA,MAAM,EAAEA,MADN;AAEFM,MAAAA,OAAO,EAAEA;AAFP,KAJJ;AAQAK,IAAAA,KAAK,gCAAyBV,IAAzB,GAAiCM,OAAjC,CAAL,CACGK,IADH,CACQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAAAE,IAAI;AAAA,eAAIV,OAAO,CAACU,IAAD,CAAX;AAAA,OAAzB,CAAJ;AAAA,KADhB,EAEGC,KAFH,CAES,UAAAC,CAAC;AAAA,aAAIX,MAAM,CAACW,CAAD,CAAV;AAAA,KAFV;AAGD,GAhB+C,CAAzB;AAAA,CAAhB;AAkBP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACjB,MAAD,EAASC,IAAT,EAAeC,IAAf;AAAA,SAAyB,IAAIC,OAAJ,CAAa,UAACC,OAAD,EAASC,MAAT,EAAoB;AACnF,QAAMC,OAAO,GAAG;AACd,sBAAgB,kBADF;AAEd,iCAAoBR,QAAQ,EAA5B;AAFc,KAAhB;AAIA,QAAIoB,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAuBlB,IAAvB;AACA,QAAMK,OAAO,GAAI;AACbP,MAAAA,MAAM,EAAEA,MADK;AAEbQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAFO;AAGbI,MAAAA,OAAO,EAAEA;AAHI,KAAjB;AAKAK,IAAAA,KAAK,gCAAyBV,IAAzB,GAAiCM,OAAjC,CAAL,CACGK,IADH,CACQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAAAE,IAAI;AAAA,eAAIV,OAAO,CAACU,IAAD,CAAX;AAAA,OAAzB,CAAJ;AAAA,KADhB,EAEGC,KAFH,CAES,UAAAC,CAAC;AAAA,aAAIX,MAAM,CAACW,CAAD,CAAV;AAAA,KAFV;AAGD,GAfmD,CAAzB;AAAA,CAApB","sourcesContent":["import {getToken} from './auth'\n\nexport const request = (method, path, data ) => new Promise( (resolve,reject) => {\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': `${getToken()}`\n  }\n  const options = data ? {\n    method: method,\n    body: JSON.stringify(data),\n    headers: headers\n  } : {\n    method: method,\n    headers: headers\n  }\n  fetch(`http://localhost:3000${path}`, options)\n    .then(response => response.json().then(json => resolve(json)))\n    .catch(e => reject(e))\n})\n\nexport const requestFile = (method, path, data ) => new Promise( (resolve,reject) => {\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': `${getToken()}`\n  }\n  let formdata = new FormData()\n  formdata.append('file',data)\n  const options =  {\n      method: method,\n      body: JSON.stringify(data),\n      headers: headers\n  }\n  fetch(`http://localhost:3000${path}`, options)\n    .then(response => response.json().then(json => resolve(json)))\n    .catch(e => reject(e))\n})"]},"metadata":{},"sourceType":"module"}