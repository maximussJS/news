{"ast":null,"code":"var _jsxFileName = \"/home/maximuss/news/news/client/src/components/LoginForm.jsx\";\nimport React from 'react';\nimport { Container, Input, Button } from 'mdbreact';\nimport PropTypes from 'prop-types';\n\nvar LoginForm = function LoginForm(props) {\n  var onSubmit = props.onSubmit,\n      onLoginChange = props.onLoginChange,\n      onPasswordChange = props.onPasswordChange,\n      onReset = props.onReset,\n      login = props.login,\n      password = props.password,\n      isLoading = props.isLoading,\n      error = props.error;\n  return React.createElement(Container, {\n    className: \"authorization-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"authorization-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(\"div\", {\n    className: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"Type Your Email\",\n    icon: \"envelope\",\n    group: true,\n    type: \"email\",\n    validate: true,\n    error: \"wrong\",\n    success: \"right\",\n    onChange: onLoginChange,\n    required: true,\n    maxLength: \"20\",\n    minLength: \"8\",\n    value: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(Input, {\n    label: \"Type Your Password\",\n    icon: \"lock\",\n    group: true,\n    type: \"password\",\n    validate: true,\n    onChange: onPasswordChange,\n    required: true,\n    maxLength: \"20\",\n    minLength: \"8\",\n    value: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), error ? React.createElement(\"span\", {\n    className: \"text-danger h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, error) : undefined, React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"btn-lg\",\n    color: \"success\",\n    type: \"submit\",\n    disabled: isLoading,\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Login\"), React.createElement(Button, {\n    className: \"btn-lg\",\n    type: \"button\",\n    onClick: onReset,\n    disabled: isLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Reset\"))));\n};\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onLoginChange: PropTypes.func.isRequired,\n  onPasswordChange: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n  login: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.string.isRequired\n};\nexport default LoginForm;","map":{"version":3,"sources":["/home/maximuss/news/news/client/src/components/LoginForm.jsx"],"names":["React","Container","Input","Button","PropTypes","LoginForm","props","onSubmit","onLoginChange","onPasswordChange","onReset","login","password","isLoading","error","undefined","propTypes","func","isRequired","string","bool"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Container,Input,Button} from 'mdbreact'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = props => {\n    const {onSubmit,onLoginChange,onPasswordChange,onReset,login,password,isLoading,error} = props\n    return (\n      <Container className='authorization-container'>\n          <form className='authorization-form'>\n              <h1 className=\"text-center\">\n                 Sign in\n              </h1>\n              <div className=\"h1\">\n                 <Input label=\"Type Your Email\"\n                        icon=\"envelope\"\n                        group type=\"email\"\n                        validate error=\"wrong\"\n                        success=\"right\"\n                        onChange={onLoginChange}\n                        required\n                        maxLength='20'\n                        minLength='8'\n                        value={login}>\n                 </Input>\n                 <Input label=\"Type Your Password\"\n                        icon=\"lock\"\n                        group type=\"password\"\n                        validate\n                        onChange={onPasswordChange}\n                        required\n                        maxLength='20'\n                        minLength='8'\n                        value={password}>\n                 </Input>\n              </div>\n            {error ?\n              <span className='text-danger h4'>\n                {error}\n              </span> : undefined }\n            <div className=\"text-center\">\n                     <Button className='btn-lg'\n                             color='success'\n                             type='submit'\n                             disabled={isLoading}\n                             onClick={onSubmit}>\n                       Login\n                     </Button>\n                     <Button className='btn-lg'\n                             type='button'\n                             onClick={onReset}\n                             disabled={isLoading}>\n                         Reset\n                     </Button>\n                   </div>\n                 </form>\n              </Container>\n    )\n}\n\nLoginForm.propTypes = {\n  onSubmit : PropTypes.func.isRequired,\n  onLoginChange : PropTypes.func.isRequired,\n  onPasswordChange : PropTypes.func.isRequired,\n  onReset : PropTypes.func.isRequired,\n  login : PropTypes.string.isRequired,\n  password : PropTypes.string.isRequired,\n  isLoading : PropTypes.bool.isRequired,\n  error : PropTypes.string.isRequired\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}